package UI.MainOfShowingContents;

import Presenter.GeneralPresenter;
import UI.PostingStuff.MakeACourse;
import UI.UserdataRelated.ProfilePage;
import base.main;
import controllers.CourseController;
import controllers.PostController;
import entities.Course;
import entities.Post;
import entities.User;

import javax.swing.*;
import java.util.ArrayList;

/**
 *
 * @author zhaoxiling
 */
public class CoursesForm extends JFrame {
    private final User user;
    private final ArrayList<Course> courses ;
    private final CourseController courseController = main.courseController;

    private final PostController postController = main.postController;

    private Course viewCourse;
    /**
     * Creates new form CoursesForm
     */
    public CoursesForm(User user, ArrayList<Course> courses) {
        this.user = user;
        this.courses = courses;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {

        JLabel jLabel1 = new JLabel();
        coursenameLabel = new JLabel();
        registerButton = new JButton();
        jList2 = new JList();
        JPanel jPanel7 = new JPanel();
        JLabel jLabel8 = new JLabel();
        nameLabel = new JLabel();
        descriptionLabel = new JLabel();
        showPostsButton = new JButton();
        reportButton = new JButton();
        JLabel jLabel9 = new JLabel();
        codeLabel = new JLabel();
        JLabel jLabel11 = new JLabel();
        semesterLabel = new JLabel();
        JLabel jLabel13 = new JLabel();
        instructorLabel = new JLabel();
        JLabel jLabel15 = new JLabel();
        postsLabel = new JLabel();
        JLabel jLabel17 = new JLabel();
        JLabel jLabel2 = new JLabel();
        userLabel = new JLabel();
        profileButton = new JButton();
        JLabel jLabel4 = new JLabel();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Courses Page");

        coursenameLabel.setText("courses name");

        registerButton.setText("Register A new Course");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        jList2.setBorder(BorderFactory.createTitledBorder("List of All Course"));
        jList2.setModel(new AbstractListModel() {
            String[] strings = courseController.getAllCoursesName().toArray(new String[0]);


            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList2MouseClicked(evt);
            }
        });
        jList2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList2KeyPressed(evt);
            }
        });

        jPanel7.setBorder(BorderFactory.createTitledBorder("Course Description"));

        jLabel8.setText("Course Name:");

        nameLabel.setText("Name of the Course");

        descriptionLabel.setText("jLabel4");

        showPostsButton.setText("show all posts under this course");
        showPostsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPostsButtonActionPerformed(evt);
            }
        });

        reportButton.setText("Report this course");
        reportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportButtonActionPerformed(evt);
            }
        });

        jLabel9.setText("Course Code");

        codeLabel.setText("Code of the Course");

        jLabel11.setText("Semester:");

        semesterLabel.setText("Semester");

        jLabel13.setText("Course Instructor:");

        instructorLabel.setText("Course Instructor");

        jLabel15.setText("Total Posts:");

        postsLabel.setText("Number of Posts");

        jLabel2.setText("Description of Course:");

        GroupLayout jPanel7Layout = new GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
                jPanel7Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(jPanel7Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                                .addComponent(showPostsButton)
                                                .addGap(55, 55, 55)
                                                .addComponent(reportButton))
                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                                .addGroup(jPanel7Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jLabel8)
                                                        .addComponent(jLabel9)
                                                        .addComponent(jLabel11)
                                                        .addComponent(jLabel13)
                                                        .addComponent(jLabel15)
                                                        .addComponent(jLabel17)
                                                        .addComponent(jLabel2))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel7Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addComponent(nameLabel)
                                                        .addComponent(codeLabel)
                                                        .addComponent(semesterLabel)
                                                        .addComponent(instructorLabel)
                                                        .addComponent(postsLabel)
                                                        .addComponent(descriptionLabel, GroupLayout.PREFERRED_SIZE, 411, GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap(129, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
                jPanel7Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel7Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel8)
                                        .addComponent(nameLabel))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel9)
                                        .addComponent(codeLabel))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel11)
                                        .addComponent(semesterLabel))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(instructorLabel)
                                        .addComponent(jLabel13))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel15)
                                        .addComponent(postsLabel))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel17)
                                .addGap(11, 11, 11)
                                .addGroup(jPanel7Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(descriptionLabel, GroupLayout.PREFERRED_SIZE, 278, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel7Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(showPostsButton)
                                        .addComponent(reportButton))
                                .addContainerGap(66, Short.MAX_VALUE))
        );

        userLabel.setText(user.getUsername());

        profileButton.setText("Profile Page");
        profileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("User");

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(registerButton)
                                .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jList2, GroupLayout.PREFERRED_SIZE, 230, GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jPanel7, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 72, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(coursenameLabel)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel1)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel4)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(userLabel)
                                                .addGap(18, 18, 18)
                                                .addComponent(profileButton)))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(coursenameLabel)
                                        .addComponent(userLabel)
                                        .addComponent(profileButton)
                                        .addComponent(jLabel4))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(registerButton)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jPanel7, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jList2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap(65, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    private void reportButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        MakeACourse makeACourse = new MakeACourse(this.user);
        makeACourse.setVisible(true);
        this.setVisible(false);

    }

    private void jList2KeyPressed(java.awt.event.KeyEvent evt) {
        // TODO add your handling code here:

    }

    private void jList2MouseClicked(java.awt.event.MouseEvent evt) {
        int chosenCourseIndex = jList2.getSelectedIndex();
        if(chosenCourseIndex==-1){
            GeneralPresenter.showEmptyEntryError();
        }
        else {
            Course selectCourse = courses.get(chosenCourseIndex);
            changePanel(selectCourse);
            this.viewCourse = selectCourse;
        }
    }

    private void changePanel(Course course){
        nameLabel.setText(course.getName());
        codeLabel.setText(course.getCode());
        semesterLabel.setText(course.getSemester());
        instructorLabel.setText(String.valueOf(course.getInstructor()));
        postsLabel.setText(String.valueOf(course.getPosts().size()));
        descriptionLabel.setText(course.getDescription());
    }

    private void showPostsButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        if (this.viewCourse == null){
            GeneralPresenter.showNotSelectError();
        } else {
        System.out.println(this.viewCourse);
        ArrayList<Post> posts = courseController.getAllPosts(viewCourse.getCode());
        PostForm postForm = new PostForm(user, viewCourse, posts);
        postForm.setVisible(true);
        this.setVisible(false);

        }
    }
    private void profileButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        ProfilePage profilePage = new ProfilePage(this.user);
        profilePage.setVisible(true);
        this.setVisible(false);

    }



    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException |
                 UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CoursesForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify
    private JLabel codeLabel;
    private JButton showPostsButton;
    private JLabel coursenameLabel;
    private JLabel descriptionLabel;
    private JLabel instructorLabel;
    private JButton jButton1;
    private JList jList2;
    private JLabel nameLabel;
    private JLabel postsLabel;
    private JButton registerButton;
    private JButton reportButton;
    private JButton profileButton;
    private JLabel semesterLabel;
    private JLabel userLabel;
    // End of variables declaration
}
